@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 0, 0, 0;
  --color-apd-header: 0, 0, 0;
  --apd-main-bg: #151515;
  --apd-secondary-bg: #252525;
  --apd-red: #ff0000;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
  }
}

html {
  scroll-behavior: smooth;
}

body {
  color: rgb(var(--foreground-rgb));
  background-color: var(--apd-main-bg);
}

/* 
  https://ryanmulligan.dev/blog/layout-breakouts
  https://www.youtube.com/watch?v=c13gpBrnGEw
  ( ͡° ͜ʖ ͡°)
*/
.content-grid,
.full {
  --padding-inline: 1rem;
  --content-max-width: 120ch;
  --breakout-max-width: 150ch;
  --breakout-size: calc(
    (var(--breakout-max-width) - var(--content-max-width)) / 2
  );

  display: grid;
  grid-template-columns:
    [full-start] minmax(var(--padding-inline), 1fr)
    [breakout-start] minmax(0, var(--breakout-size))
    [content-start] min(
      100% - (var(--padding-inline) * 2),
      var(--content-max-width)
    )
    [content-end]
    minmax(0, var(--breakout-size)) [breakout-end]
    minmax(var(--padding-inline), 1fr) [full-end];
}

.content-grid > :not(.breakout, .full),
.full > :not(.breakout, .full) {
  grid-column: content;
}

.content-grid > .breakout,
.full > .breakout {
  grid-column: breakout;
}

.content-grid > .full {
  grid-column: full;
}

.apd-hero {
  min-height: calc(100dvh - 56px);
}

.apd-link-button {
  position: relative;

  &::before {
    content: "";
    position: absolute;
    inset: 0;
    background-color: #616161;
    z-index: -1;
    border-radius: 8px;
    transform: scale(0.99);
    transition: transform 0.3s;
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
  }

  &:hover::before {
    transform: scale(1.02);
  }
}

p.simple-heading::before {
  content: "";
  position: absolute;
  bottom: -8px;
  width: 100%;
  height: 1px;
  background-color: var(--apd-red);
}

/*----------------------------------------------------------------

Sorry tailwind
----------------------------------------------------------------*/
div.timeline {
  position: relative;
  padding: 32px 0;

  &::after {
    content: "";
    position: absolute;
    width: 3px;
    background-color: var(--apd-red);
    height: 100%;
    left: 50%;
    top: 0%;
    transform: translateX(-50%);
  }

  .timeline-item-wrapper {
    display: grid;

    &:not(:last-child) {
      margin-bottom: 32px;
    }
  }

  .timeline-item {
    width: 50%;
    justify-self: flex-end;
    display: flex;
    gap: 8px;
  }

  .timeline-item.left {
    justify-self: flex-start;
    justify-content: flex-end;

    .timeline-item-details {
      & > div {
        text-align: end;
      }
    }

    .timeline-item-connector {
      order: 1;
      flex-direction: row-reverse;

      .dot {
        transform: translateX(50%);
      }
    }
  }

  .timeline-item-connector {
    display: flex;
    height: 36px;
    align-items: center;

    .dot {
      width: 16px;
      height: 16px;
      border-radius: 50%;
      background-color: var(--apd-red);
      transform: translateX(-50%);
    }

    .line {
      width: 100px;
      height: 2px;
      background-color: white;
    }
  }

  .timeline-item-details {
    display: flex;
    gap: 8px;
    flex-direction: column;

    .techs {
      border: 1px solid var(--apd-red);
      padding: 8px 16px;
      flex: 1;
      background-color: #531212;
      border-radius: 20px;
    }
  }

  @media (max-width: 768px) {
    &::after {
      left: 0%;
    }

    .timeline-item {
      width: 100%;
      justify-self: flex-start;
    }

    .timeline-item.left {
      justify-self: flex-start;
      justify-content: flex-start;

      .timeline-item-details {
        & > div {
          text-align: start;
        }
      }

      .timeline-item-connector {
        order: unset;
        flex-direction: row;

        .dot {
          transform: translateX(-50%);
        }
      }
    }
  }

  @media (max-width: 500px) {
    .timeline-item {
      .timeline-item-connector {
        .line {
          width: 35px;
        }
      }
    }
  }
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}
